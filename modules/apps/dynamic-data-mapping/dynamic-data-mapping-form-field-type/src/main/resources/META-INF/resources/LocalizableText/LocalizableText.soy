{namespace LocalizableText}

{template .render}
	{@param name: string}
	{@param? _handleFieldBlurred: any}
	{@param? _handleFieldChanged: any}
	{@param? _handleFieldFocused: any}
	{@param? _handleLanguageClicked: any}
	{@param? _value: string}
	{@param? availableLocales: list<[
		displayName: string,
		icon: string,
		isDefault: bool,
		isTranslated: bool,
		localeId: string
	]>}
	{@param? displayErrors: bool}
	{@param? displayStyle: string}
	{@param? editingLocale: [
		displayName: string,
		icon: string,
		localeId: string
	]}
	{@param? errorMessage: string}
	{@param? id: string}
	{@param? label: string}
	{@param? placeholder: string}
	{@param? predefinedValue: string}
	{@param? readOnly: bool}
	{@param? repeatable: bool}
	{@param? required: bool}
	{@param? showLabel: bool}
	{@param? spritemap: string}
	{@param? tip: string}
	{@param? tooltip: string}
	{@param? valid: bool}
	{@param? visible: bool}

	{call FieldBase.render}
		{param contentRenderer kind="html"}
			{call .content}
				{param _handleFieldBlurred: $_handleFieldBlurred /}
				{param _handleFieldChanged: $_handleFieldChanged /}
				{param _handleFieldFocused: $_handleFieldFocused /}
				{param _handleLanguageClicked: $_handleLanguageClicked /}
				{param availableLocales: $availableLocales /}
				{param displayStyle: $displayStyle /}
				{param editingLocale: $editingLocale /}
				{param id: $id /}
				{param name: $name /}
				{param placeholder: $placeholder /}
				{param predefinedValue: $predefinedValue /}
				{param readOnly: $readOnly /}
				{param spritemap: $spritemap /}
				{param value: isNonnull($_value) ? $_value : '' /}
			{/call}
		{/param}
		{param displayErrors: $displayErrors /}
		{param errorMessage: $errorMessage /}
		{param id: $id /}
		{param label: $label /}
		{param name: $name /}
		{param readOnly: $readOnly /}
		{param repeatable: $repeatable /}
		{param required: $required /}
		{param showLabel: $showLabel /}
		{param spritemap: $spritemap /}
		{param tip: $tip /}
		{param tooltip: $tooltip /}
		{param valid: $valid /}
		{param visible: $visible /}
	{/call}
{/template}

{template .content}
	{@param name: string}
	{@param? _handleFieldBlurred: any}
	{@param? _handleFieldChanged: any}
	{@param? _handleFieldFocused: any}
	{@param? _handleLanguageClicked: any}
	{@param? availableLocales: list<[
		displayName: string,
		icon: string,
		isDefault: bool,
		isTranslated: bool,
		localeId: string
	]>}
	{@param? displayStyle: string}
	{@param? editingLocale: [
		displayName: string,
		icon: string,
		localeId: string
	]}
	{@param? id: string}
	{@param? placeholder: string}
	{@param? predefinedValue: string}
	{@param? readOnly: bool}
	{@param? spritemap: string}
	{@param? value: string}

	{let $inputValue: isNonnull($value) and $value != '' ? $value : $predefinedValue /}

	{let $attributes kind="attributes"}
		class="ddm-field-text form-control"

		name="{$name}"

		type="text"

		data-oninput="{$_handleFieldChanged}"

		data-onfocus="{$_handleFieldFocused}"

		{if $id}
			id="{$id}"
		{/if}

		{if $placeholder}
			placeholder="{$placeholder}"
		{/if}

		type="text"

		data-onblur="{$_handleFieldBlurred}"

		{if $readOnly}
			disabled="disabled"
		{/if}

		value="{$inputValue}"
	{/let}

	<div class="input-group">
		{if $displayStyle == 'multiline'}
			<div class="input-group-item">
				<textarea {$attributes}>{$inputValue}</textarea>
			</div>
		{else}
			<div class="input-group-append input-group-item">
				<input {$attributes}>
			</div>
		{/if}

		<div class="input-group-item input-group-item-shrink">
			{if isNonnull($editingLocale)}
				<button
					aria-expanded="false"
					aria-haspopup="true"
					class="btn btn-monospaced btn-secondary dropdown-toggle"
					data-toggle="dropdown"
					type="button"
				>
					<span class="inline-item">
						<svg
							class="lexicon-icon lexicon-icon-{$editingLocale.icon}"
							focusable="false"
							role="presentation"
						>
							<use href="{$spritemap}#{$editingLocale.icon}"></use>
						</svg>
					</span>
					<span class="btn-section">{$editingLocale.icon}</span>
				</button>
			{/if}

			<ul class="dropdown-menu dropdown-menu-right">
				{if isNonnull($availableLocales)}
					{foreach $availableLocale in $availableLocales}
						<li>
							<a
								class="autofit-row dropdown-item"
								data-locale-id="{$availableLocale.localeId}"
								href="#1"
								onClick="{$_handleLanguageClicked}"
							>
								<span class="autofit-col autofit-col-expand">
									<span class="autofit-section">
										<span class="inline-item inline-item-before">
											{if isNonnull($availableLocale.icon)}
												<svg
													class="lexicon-icon lexicon-icon-{$availableLocale.icon}"
													focusable="false"
													role="presentation"
												>
													<use href="{$spritemap}#{$availableLocale.icon}"></use>
												</svg>
											{/if}
										</span>
										{$availableLocale.displayName}
									</span>
								</span>
								<span class="autofit-col">
									{if $availableLocale.isDefault}
										<span class="label label-info">
											<span class="label-item label-item-expand">{msg desc=""}default{/msg}</span>
										</span>
									{elseif $availableLocale.isTranslated}
										<span class="label label-success">
											<span class="label-item label-item-expand">{msg desc=""}translated{/msg}</span
											>
										</span>
									{else}
										<span class="label label-warning">
											<span class="label-item label-item-expand">{msg desc=""}not-translated{/msg}</span>
										</span>
									{/if}
								</span>
							</a>
						</li>
					{/foreach}
				{/if}
			</ul>
		</div>
	</div>
{/template}