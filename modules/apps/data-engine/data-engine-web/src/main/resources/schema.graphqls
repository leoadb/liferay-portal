input DataDefinitionFieldInput {
	defaultValue: String
	indexable: Boolean
	labels: [LocalizedValueInput]
	localizable: Boolean
	name: String!
	repeatable: Boolean
	required: Boolean
	tips: [LocalizedValueInput]
	type: String!
}

input DataDefinitionInput {
	dataDefinitionId: ID
	descriptions: [LocalizedValueInput]
	fields: [DataDefinitionFieldInput]
	names: [LocalizedValueInput]
	storageType: String
}

input DataRecordCollectionInput {
	dataDefinition: DataDefinitionInput
	dataRecordCollectionId: ID
	descriptions: [LocalizedValueInput]
	names: [LocalizedValueInput]
}

input LocalizedValueInput {
	key: String!
	value: String!
}

input SaveDataDefinitionModelPermissionsInput {
	companyId: ID!
	dataDefinitionId: ID!
	delete: Boolean
	groupId: ID
	scopedGroupId: ID!
	update: Boolean
	userId: ID
	view: Boolean
}

input SaveDataRecordCollectionModelPermissionsInput {
	companyId: ID!
	dataRecordCollectionId: ID!
	delete: Boolean
	groupId: ID
	scopedGroupId: ID!
	update: Boolean
	userId: ID
	view: Boolean
}

input SaveDataDefinitionPermissionsInput {
	addDataDefinition: Boolean
	companyId: ID!
	definePermissions: Boolean
	roleNames: [String]!
	scopedGroupId: ID!
}

input SaveDataRecordCollectionPermissionsInput {
	addDataRecordCollection: Boolean
	companyId: ID!
	definePermissions: Boolean
	roleNames: [String]!
	scopedGroupId: ID!
}

input DeleteDataRecordCollectionPermissionsInput {
	companyId: ID!
	roleNames: [String]!
	scopedGroupId: ID!
}

input DeleteDataRecordCollectionModelPermissionsInput {
	companyId: ID!
	dataRecordCollectionId: ID!
	roleNames: [String]!
	scopedGroupId: ID!
}

schema {
	mutation: MutationType
	query: QueryType
}

type DataDefinitionFieldType {
	defaultValue: String
	indexable: Boolean
	labels: [LocalizedValueType]
	localizable: Boolean
	name: String
	repeatable: Boolean
	required: Boolean
	tips: [LocalizedValueType]
	type: String
}

type DataDefinition {
	dataDefinitionId: ID
	descriptions: [LocalizedValueType]
	fields: [DataDefinitionFieldType]
	names: [LocalizedValueType]
	storageType: String
}

type DataRecordCollection {
	dataDefinition: DataDefinition
	dataRecordCollectionId: ID
	descriptions: [LocalizedValueType]
	names: [LocalizedValueType]
}

type DeleteDataDefinitionType {
	dataDefinition: DataDefinition
}

type GetDataDefinitionType {
	dataDefinition: DataDefinition
}

type LocalizedValueType {
	key: String
	value: String
}

type SaveModelPermissionsDataDefinitionType {
	dataDefinitionId: ID
}

type SaveModelPermissionsDataRecordCollectionType {
	dataRecordCollectionId: ID
}

type DeleteModelPermissionsDataRecordCollectionType {
	dataRecordCollectionId: ID
}

type SavePermissionsDataDefinitionType {
	roleNames: [String]
}

type DeletePermissionsDataRecordCollectionType {
	roleNames: [String]
}

type SavePermissionsDataRecordCollectionType {
	roleNames: [String]
}

type MutationType {
	deleteDataDefinition(dataDefinitionId: ID!, languageId: String!): DeleteDataDefinitionType
	deleteDataRecordCollectionModelPermissions(deleteDataRecordCollectionModelPermissionsInput: DeleteDataRecordCollectionModelPermissionsInput!, languageId: String!): DeleteModelPermissionsDataRecordCollectionType
	deleteDataRecordCollectionPermissions(deleteDataRecordCollectionPermissionsInput: DeleteDataRecordCollectionPermissionsInput!, languageId: String!): DeletePermissionsDataRecordCollectionType
	saveDataDefinition(userId: ID!, groupId: ID!, dataDefinition: DataDefinitionInput!, languageId: String!): SaveDataDefinitionType
	saveDataDefinitionModelPermissions(saveDataDefinitionModelPermissionsInput: SaveDataDefinitionModelPermissionsInput!, languageId: String!): SaveModelPermissionsDataDefinitionType
	saveDataDefinitionPermissions(saveDataDefinitionPermissionsInput: SaveDataDefinitionPermissionsInput!, languageId: String!): SavePermissionsDataDefinitionType
	saveDataRecordCollection(userId: ID!, groupId: ID!, dataRecordCollection: DataRecordCollectionInput!, languageId: String!): SaveDataRecordCollectionType
	saveDataRecordCollectionModelPermissions(saveDataRecordCollectionModelPermissionsInput: SaveDataRecordCollectionModelPermissionsInput!, languageId: String!): SaveModelPermissionsDataRecordCollectionType
	saveDataRecordCollectionPermissions(saveDataRecordCollectionPermissionsInput: SaveDataRecordCollectionPermissionsInput!, languageId: String!): SavePermissionsDataRecordCollectionType
}

type QueryType {
	getDataDefinition(dataDefinitionId: ID!, languageId: String!): GetDataDefinitionType
}

type SaveDataDefinitionType {
	dataDefinition: DataDefinition
}

type SaveDataRecordCollectionType {
	dataRecordCollection: DataRecordCollection
}